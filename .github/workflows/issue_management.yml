name: Issue Management

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  issue_comment:
    types: [created]

permissions:
  issues: write
  contents: read

jobs:
  auto-label:
    name: Auto-label Issues
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Add needs-triage label
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['needs-triage']
            });

      - name: Auto-assign component labels
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue.title.toLowerCase();
            const body = context.payload.issue.body.toLowerCase();
            const labels = [];
            
            // Component detection
            if (title.includes('parser') || body.includes('cql') || body.includes('parser')) {
              labels.push('parser');
            }
            if (title.includes('sstable') || body.includes('sstable') || body.includes('storage')) {
              labels.push('storage');
            }
            if (title.includes('cli') || body.includes('command') || body.includes('cqlite-cli')) {
              labels.push('cli');
            }
            if (title.includes('performance') || title.includes('slow') || body.includes('benchmark')) {
              labels.push('performance');
            }
            if (title.includes('doc') || body.includes('documentation') || body.includes('readme')) {
              labels.push('documentation');
            }
            if (title.includes('wasm') || body.includes('webassembly')) {
              labels.push('wasm');
            }
            if (title.includes('ffi') || body.includes('foreign function')) {
              labels.push('ffi');
            }
            
            // Priority detection
            if (title.includes('critical') || title.includes('urgent') || body.includes('critical')) {
              labels.push('critical');
            } else if (title.includes('high') || body.includes('blocking')) {
              labels.push('high-priority');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }

  stale-issues:
    name: Mark Stale Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/stale@v9
        with:
          stale-issue-message: |
            This issue has been automatically marked as stale because it has not had recent activity. 
            It will be closed if no further activity occurs. Thank you for your contributions.
          stale-pr-message: |
            This pull request has been automatically marked as stale because it has not had recent activity.
            It will be closed if no further activity occurs. Thank you for your contributions.
          stale-issue-label: 'stale'
          stale-pr-label: 'stale'
          days-before-stale: 60
          days-before-close: 7
          exempt-issue-labels: 'pinned,security,critical'
          exempt-pr-labels: 'pinned,security,critical'

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday